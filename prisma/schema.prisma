generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model candidate {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  recruiter_id       String               @db.Uuid
  name               String               @db.VarChar(255)
  job_role           String               @db.VarChar(255)
  function           String               @db.VarChar(255)
  industry           String               @db.VarChar(255)
  client             String               @db.VarChar(255)
  created_at         DateTime             @default(now()) @db.Timestamp(6)
  updated_at         DateTime             @default(now()) @db.Timestamp(6)
  recruiter          recruiter            @relation(fields: [recruiter_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pipeline_candidate pipeline_candidate[]
}

model pipeline {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  recruiter_id       String               @db.Uuid
  name               String               @db.VarChar(255)
  created_at         DateTime             @default(now()) @db.Timestamp(6)
  updated_at         DateTime             @default(now()) @db.Timestamp(6)
  recruiter          recruiter            @relation(fields: [recruiter_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pipeline_candidate pipeline_candidate[]
}

model pipeline_candidate {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  pipeline_id  String    @db.Uuid
  candidate_id String    @db.Uuid
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  candidate    candidate @relation(fields: [candidate_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pipeline     pipeline  @relation(fields: [pipeline_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model recruiter {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?     @db.VarChar(255)
  image       String?     @db.VarChar(255)
  name        String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  user_id     String      @db.Uuid
  tenant_id   String      @db.VarChar(255)
  candidate   candidate[]
  pipeline    pipeline[]
  user        user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String      @unique @db.VarChar(255)
  firstName   String?     @db.VarChar(255)
  lastName    String?     @db.VarChar(255)
  roq_user_id String      @db.VarChar(255)
  tenant_id   String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  recruiter   recruiter[]
}
